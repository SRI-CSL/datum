datum = line_prefix firstline newline lines

<firstline> = cfirstline | sfirstline
cfirstline = subject spaces assay spaces <'is'> spaces change spaces ctreatment

<ctreatment> = &'irt' changetype spaces treatments (spaces? stimes)? |
               &'by' changetype spaces treatments |
               &'itpo' changetype spaces xtreatments |
               &'itao' changetype spaces ktreatment
changetype = symbol
change = ('slightly' | 'detectable-but')? spaces?
         ('increased' | 'decreased' | 'unchanged')
stimes = <'('> (stpt | excuse) <')'>
stpt = nat spaces symbol
excuse = 'tnr' | 'times' | 'tbg'

sfirstline = subject spaces assay spaces <'is'> spaces schange
schange = 'undetectable' | 'detectable'

<lines> = datumline (spaces? newline datumline)*
<datumline> = <'  '> line_prefix
              (source | environment | times | extra |
               meta | comment | oligo | ipfrom)

(*
  A subject can be one of the following:
    - No subject at all
    - An oprotein with origin r/p/s
    - A protein with any other origin, plus a handle and IP
    - A chemical with a handle
    - A gene
*)
subject = <'NS'> /
          &#'[rps]' oprotein /
          chemical handle /
          oprotein handle ip /
          gene

chemical = simple_symbol
gene = simple_symbol
<simple_symbol> = !#'[xrpks]' symbol

xsprotein = xoprotein handle ip
ip = 'IP'?
handle = <'['> symbol <']'>
oprotein = origin protein mutations modifications
protein = symbol
<xoprotein> = &'x' oprotein
origin = #'[xrpks]?'
mutations = (<'('> pmutation (<'/'> pmutation)* <')'> mutation_string?)?
<pmutation> = mutation | <'('> mutation <')'>
<mutation> = domain / del_mut / s_mut / point / symbol_mut
del_mut = <'del('> domain <')'>
s_mut = #'p[TSY]\d{1,4}'
point = letter nat letter
domain = nat <'-'> nat
symbol_mut = symbol
mutation_string = string

modifications = modification*
modification = <'{'> mod_symbol sites <'}'>
mod_symbol = symbol
sites = <'('> site (<'/'> site)* <')'>
<site> = #'([ACTYSKPNLMVIFDERHQWG]|p[TYS])\d+' | symbol

assay = ivka / ivlka / activity_assay / oligo_binding / locatedin / infraction / phos / boundto / modification_assay / binding
detect = <'['> symbol <']'>
assay_sym = symbol

modification_assay = assay_sym sites? detect

binding = assay_sym detect spaces hooks
hooks = <'('> hook (plus hook)* <')'> | hook (plus hook)*
hook = (hook_entity / oprotein) handle ip
hook_entity = symbol

ivka = <'IVKA('> substrates <')'> sites? detect
ivlka = <'IVLKA('> lipids <')'> detect
substrates = symbol (<#'[/,]'> symbol)*
lipids = symbol (<'/'> symbol)*

activity_assay = activity <'('> substrates <')'> detect
activity = ('IVGefA' | 'IVPPaseAct' | 'IVHatAct' | 'IVProteaseAct' | 'IVHDACAct')

locatedin = <'locatedin('> position <')'> detect
infraction = <'infraction('> fraction <')'> detect
boundto = <'boundto('> gene <')'> detect
position = symbol
fraction = symbol
gene = symbol

oligo_binding = <'oligo-binding'> detect
phos = phostype <'phos'> detect
phostype = ('ST' | #'[STY]')

<treatment> = symbol / oprotein / xsprotein
<streatment> = treatment (spaces conjunction spaces treatment)*

conjunction = 'and/or' | 'and' | 'or' | '+'

<streat_x_or_o> = (oprotein / xsprotein) (spaces conjunction spaces (oprotein / xsprotein))*
<streat_ox> = xoprotein (spaces conjunction spaces xoprotein)*

treatments = <'('> spaces? streatment spaces? <')'> /
             streatment

xtreatments = <'('> spaces? streat_ox spaces? <')'> /
              streat_ox

ktreatment = kte ktest (spaces conjunction spaces kte ktest)* |
             kte (spaces conjunction spaces kte)* ktest

ktest = spaces <'['> symbol <']'>
kte = symbol / oprotein / xsprotein

environment = <'cells:'> spaces env_description
<env_description> = cells spaces <'in'> spaces medium spaces? strings? | 'none'
medium = symbol
strings = string (spaces string)*
cells = symbol cell_mutations
cell_mutations = cell_mutation*
cell_mutation = <'<'> (symbol <'~'> symbol | oprotein) <'>'>

source = <'source:'> spaces? pmid <#'\([DR]\)'>? figures
pmid = nat
figures = (<'-'> ('Fig' | 'Table' | figs))*
<figs> = figure (<','> figure)*
<figure> = #'S?\d*[A-Za-z]?(\[[lrtbm]+\])?'

times = <'times:'> spaces? timepoints spaces unit
timepoints = timepoint (spaces timepoint)*
timepoint = #'\d+' #'\+*'
unit = symbol

extra = extra_name <':'> spaces extra_treat spaces? bkg? |
        req_adjective? 'reqs' <':'> spaces reqs_body spaces? bkg? |
        'does not req' <':'> spaces reqs_body spaces? bkg?

bkg = 'no-bkg-control' | 'affects-bkg'

<extra_name> = enhanced_adjective? 'enhanced by' |
               inhib_adjective? 'inhibited by' |
               req_adjective? 'repressed by' |
               inhib_adjective? 'reversed by' |
               'unaffected by'

<enhanced_adjective> = ('slightly' | 'syn-' | 'synergistically' | 'bkg') spaces?
<inhib_adjective> = ('partially' | 'slightly' | 'bkg') spaces?
<req_adjective> = ('partially' | 'bkg') spaces?

<extra_treat> = streatment spaces addition_mode |
                stim spaces stim_mode |
                substitution spaces sub_mode

<reqs_body> = ktreatment |
              'both' spaces #'\[omissions?\]'

addition_mode = <'['> ('chem' / 'cotreatment' / 'addition' / 'omission' / symbol) <']'>
stim_mode = <'['> ('prestim' | 'costim' | 'stim' | 'pretreatment' | 'stress' | 'preconditioning' | 'posttreatment') <']'>
sub_mode = <'['> ('substitution' | 'knockin') <']'>

stim = streatment (spaces <'('> stim_times <')'>)?
stim_times = numlist spaces symbol | 'tnr' | 'tbg'
<numlist> = nat (spaces? <','> spaces? nat)*
substitution = streat_x_or_o

oligo = <'oligo:'> spaces oligo_body
<oligo_body> = oligo_str spaces? oligo_seq?
<oligo_str> = string | symbol
oligo_seq = #'5-[ATCG ]+-3' / symbol

ipfrom = #'IP[12s]?from' <':'> spaces? env_description;

meta = <'meta:'> spaces? rest_of_line
comment = <'comment:'> spaces? rest_of_line

<string> = <'"'> #'[^"]*' <'"'>
<symbol> = #'[\w\.\?!\\\-]+'
<rest_of_line> = #'[^\n]*'
<spaces> = <#' +'>
<plus> = spaces <'+'> spaces
<nat> = #'\d+'
<letter> = #'[A-Za-z]'
<line_prefix> = <'  ***'> spaces
<newline> = <#'\n'>
